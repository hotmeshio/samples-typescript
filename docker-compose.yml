version: '3.9'

services:
  redis6371:
    container_name: redis6371
    image: redis/redis-stack:latest
    command: ["redis-server", "--requirepass", "key_admin", "--port", "6371", "--loadmodule", "/opt/redis-stack/lib/redisearch.so"]
    ports:
      - "6371:6371"
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "-p", "6371", "-a", "key_admin", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  service_a:
    build:
      context: .
      target: development
    command: npm run service
    container_name: service_a
    volumes:
      - .:/app
      - ./node_modules:/app/node_modules
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
    depends_on:
      redis6371:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://localhost:3002 || exit 1
      interval: 5s
      timeout: 4s
      retries: 50

  service_b:
    build:
      context: .
      target: development
    command: npm run service
    container_name: service_b
    volumes:
      - .:/app
      - ./node_modules:/app/node_modules
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
      - IS_REMOTE_HOST=true
    depends_on:
      redis6371:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://localhost:3002 || exit 1
      interval: 5s
      timeout: 4s
      retries: 50
